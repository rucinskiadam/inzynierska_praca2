exit
n
b
n
earned_points
exit
n
nn
n
exit
n
Drawnexercise.where(student_id: @student.id)
n
exit
n
@presence.presentn
@presence = Presence.find(id)
n
@presence = Presence.find(id)
n
@presence = Presence.find(id)
n
nn
n
nn
n
nn
n
nn
n
@presence
@presence.present
exit
finish
n
@presence = Presence.find(id)
n
@presence.present
n
@presence = Presence.find(id)
n
@presence.present
n
@presence = Presence.find(id)
exit
exir
next
Drawnexercise.find_by(student_id: session[:user_id], level: "1", number: i).exercise_id
next
Drawnexercise.find_by(student_id: session[:user_id], level: "1", number: i).exercise_id
exit
Drawnexercise.find_by(student_id: session[:user_id], level: "1", number: i)
Drawnexercise.find_by(student_id: session[:user_id], level: "1", number: i).exercise_id
next
Drawnexercise.find_by(student_id: session[:user_id], level: "1", number: i).exercise_id
Drawnexercise.find_by(student_id: session[:user_id], level: "1", number: i)
exit
n
zad=Exercise.find_by(id: los11, teacher_id: @gr.teacher_id, level: j , number: i)
n
los11 = rand(1..wszystkiezadania)
n
wszystkiezadania=Exercise.where(teacher_id: @gr.teacher_id, level: j , number: i).count
n
zad=Exercise.find_by(id: los11, teacher_id: @gr.teacher_id, level: j , number: i)
=> 71:             zad=Exercise.find_by(id: los11, teacher_id: @gr.teacher_id, level: j , number: i)
n
los11 = rand(1..wszystkiezadania)
n
wszystkiezadania=Exercise.where(teacher_id: @gr.teacher_id, level: j , number: i).count
exit
n
zad
zad=Exercise.find_by(id: los11, teacher_id: @gr.teacher_id, level: j , number: i)
zad
Exercise.find_by(id: los11, teacher_id: @gr.teacher_id, level: j , number: i)
n
back
n
los11
los11 = rand(1..wszystkiezadania)
next
wszystkiezadania
wszystkiezadania=Exercise.where(teacher_id: @gr.teacher_id, level: j , number: i).count
exit
e
@progr.total += answer.reward
exit
answer.reward
@progr.total += answer.reward
@progr.total
@progr
exit
finish
n
finish
n
!params[:medal_id].empty?
params[:medal_id].empty?
exit
n
exit
params[:medal_id]
exit
params[:medal_id]
exit
finish
params[:medal_id]
n
exit
@sqanswer
exit
next
exit
n
finish
@sqanswer.first
@sqanswer
next
v l 
exit
next
finish
Sqanswer.where(:teacher_id => group.teacher_id, :student_id => student.id, :sidequest_id => @sidequest.id, :reward => @sidequest.reward, :read => false).exists?
!Sqanswer.where(:teacher_id => group.teacher_id, :student_id => student.id, :sidequest_id => @sidequest.id, :reward => @sidequest.reward, :read => false).exists?
if !Sqanswer.where(:teacher_id => group.teacher_id, :student_id => student.id, :sidequest_id => @sidequest.id, :reward => @sidequest.reward, :read => false).exists?
exit
f
skip
bt
b t
stop
finish
next
b
back
up
next
n
next
@answer
v a
v l
n
v l
v
next
c
stop
go
next
exit
end
next
go
next
@answer.save
next
@answer.save
@answer = Answer.new(answer_data)
next
answer_data
next
exit
<<<<<<< HEAD
next
exit
instance_variables
step
    7:       @presence.update_attributes(params.require(:presence).fetch(id).permit(:present))
    6:       @presence = Presence.find(id)
=>  5:     params['presence'].keys do |id|
exit
params['presence'].keys(1)
params['presence'].keys.first
params['presence'].keys
@presence.update_attributes(params.require(:presence).fetch("1").permit(:present))
@presence.update_attributes(params.require(:presence).fetch(1).permit(:present))
@presence.update_attributes(params.require(:presence).fetch(1).permit(:present)
@presence.update_attributes(params[:presence][:present][1])
@presence = Presence.find("1")
params[:presence].each
params[:presence].keys
params[:presence].keys do |id| 
@presence = Presence.find("1")
@presence
params['presence'].keys do |id| 
params['presence'].keys do |id| @presence = Presence.find(id) end
params['presence'].keys do |id| puts id end
params['presence'].keys
exit
@presence.update_attributes(params.require(:presence).fetch("6").permit(:present))
@presence.update_attributes(params.require(:presence).fetch(6).permit(:present))
@presence = Presence.find(6)
params['presence'].keys do |id| @presence = Presence.find(id.to_i) @presence.update_attributes(presence_params(id)) end
    end
      @presence.update_attributes(presence_params(id))
      @presence = Presence.find(id.to_i)
    params['presence'].keys do |id|
params['presence'].keys
5
=======
 params[:zad][:hint]
e
params[:zad][:hint]
exit
params[:zad][:hint]
exit
params[:zad][:hint]
>>>>>>> 4207b959bb1b90509e90f67c0fcd50251d4f2fed
